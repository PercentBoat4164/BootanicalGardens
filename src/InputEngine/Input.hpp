#pragma once

#include <SDL3/SDL_events.h>

#include <unordered_map>

struct Time;

class Input {
public:
  enum KeyCode : uint8_t {
    UNKNOWN,
    RETURN,
    ESCAPE,
    BACKSPACE,
    TAB,
    SPACE,
    EXCLAIM,
    DOUBLE_APOSTROPHE,
    HASH,
    PERCENT,
    DOLLAR,
    AMPERSAND,
    APOSTROPHE,
    LEFT_PARENTHESIS,
    RIGHT_PARENTHESIS,
    ASTERISK,
    PLUS,
    COMMA,
    MINUS,
    PERIOD,
    SLASH,
    ZERO,
    ONE,
    TWO,
    THREE,
    FOUR,
    FIVE,
    SIX,
    SEVEN,
    EIGHT,
    NINE,
    COLON,
    SEMICOLON,
    LESS_THAN,
    EQUALS,
    GREATER_THAN,
    QUESTION,
    AT,
    LEFT_BRACKET,
    BACKSLASH,
    RIGHT_BRACKET,
    CARET,
    UNDERSCORE,
    GRAVE,
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    CAPSLOCK,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    PRINT_SCREEN,
    SCROLL_LOCK,
    PAUSE,
    INSERT,
    HOME,
    PAGEUP,
    DELETE,
    END,
    PAGEDOWN,
    RIGHT,
    LEFT,
    DOWN,
    UP,
    NUMLOCK_CLEAR,
    KEYPAD_DIVIDE,
    KEYPAD_MULTIPLY,
    KEYPAD_MINUS,
    KEYPAD_PLUS,
    KEYPAD_ENTER,
    KEYPAD_1,
    KEYPAD_2,
    KEYPAD_3,
    KEYPAD_4,
    KEYPAD_5,
    KEYPAD_6,
    KEYPAD_7,
    KEYPAD_8,
    KEYPAD_9,
    KEYPAD_0,
    KEYPAD_PERIOD,
    APPLICATION,
    POWER,
    KEYPAD_EQUALS,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F20,
    F21,
    F22,
    F23,
    F24,
    EXECUTE,
    HELP,
    MENU,
    SELECT,
    STOP,
    AGAIN,
    UNDO,
    CUT,
    COPY,
    PASTE,
    FIND,
    MUTE,
    VOLUME_UP,
    VOLUME_DOWN,
    KEYPAD_COMMA,
    KEYPAD_EQUALSAS400,
    ALT_ERASE,
    SYSTEM_REQUEST,
    CANCEL,
    CLEAR,
    PRIOR,
    RETURN2,
    SEPARATOR,
    OUT,
    OPER,
    CLEAR_AGAIN,
    CURSOR_SELECT,
    EXSEL,
    KEYPAD_00,
    KEYPAD_000,
    THOUSANDS_SEPARATOR,
    DECIMAL_SEPARATOR,
    CURRENCY_UNIT,
    CURRENCY_SUBUNIT,
    KEYPAD_LEFT_PARENTHESIS,
    KEYPAD_RIGHT_PARENTHESIS,
    KEYPAD_LEFT_BRACE,
    KEYPAD_RIGHT_BRACE,
    KEYPAD_TAB,
    KEYPAD_BACKSPACE,
    KEYPAD_A,
    KEYPAD_B,
    KEYPAD_C,
    KEYPAD_D,
    KEYPAD_E,
    KEYPAD_F,
    KEYPAD_XOR,
    KEYPAD_POWER,
    KEYPAD_PERCENT,
    KEYPAD_LESS,
    KEYPAD_GREATER,
    KEYPAD_AMPERSAND,
    KEYPAD_DOUBLE_AMPERSAND,
    KEYPAD_VERTICAL_BAR,
    KEYPAD_DOUBLE_VERTICAL_BAR,
    KEYPAD_COLON,
    KEYPAD_HASH,
    KEYPAD_SPACE,
    KEYPAD_AT,
    KEYPAD_EXCLAMATION,
    KEYPAD_MEM_STORE,
    KEYPAD_MEM_RECALL,
    KEYPAD_MEM_CLEAR,
    KEYPAD_MEM_ADD,
    KEYPAD_MEM_SUBTRACT,
    KEYPAD_MEM_MULTIPLY,
    KEYPAD_MEM_DIVIDE,
    KEYPAD_PLUS_MINUS,
    KEYPAD_CLEAR,
    KEYPAD_CLEAR_ENTRY,
    KEYPAD_BINARY,
    KEYPAD_OCTAL,
    KEYPAD_DECIMAL,
    KEYPAD_HEXADECIMAL,
    LEFT_CONTROL,
    LEFT_SHIFT,
    LEFT_ALT,
    LEFT_GUI,
    RIGHT_CTRL,
    RIGHT_SHIFT,
    RIGHT_ALT,
    RIGHT_GUI,
    MODE,
    AUDIO_NEXT,
    AUDIO_PREVIOUS,
    AUDIO_STOP,
    AUDIO_PLAY,
    AUDIO_MUTE,
    MEDIA_SELECT,
    WWW,
    MAIL,
    CALCULATOR,
    COMPUTER,
    BROWSER_SEARCH,
    BROWSER_HOME,
    BROWSER_BACK,
    BROWSER_FORWARD,
    BROWSER_STOP,
    BROWSER_REFRESH,
    BROWSER_BOOKMARKS,
    BRIGHTNESS_DOWN,
    BRIGHTNESS_UP,
    DISPLAY_SWITCH,
    KEYBOARD_ILLUMINATION_TOGGLE,
    KEYBOARD_ILLUMINATION_DOWN,
    KEYBOARD_ILLUMINATION_UP,
    EJECT,
    SLEEP,
    APP1,
    APP2,
    AUDIO_REWIND,
    AUDIO_FAST_FORWARD,
    SOFT_LEFT,
    SOFT_RIGHT,
    CALL,
    END_CALL,
  };

private:
  static std::unordered_map<KeyCode, float> keys;

  static void onEvent(SDL_Event& event);
  static void onTick();
  friend Time;

public:
  Input() = delete;

  static bool keyPressed(KeyCode key);
  static float keyDown(KeyCode key);
  static bool keyReleased(KeyCode key);
  static float keyUp(KeyCode key);
};
